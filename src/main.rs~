use rand::Rng;
use std::env;

fn main() {
    let args: Vec<String> = env::args().collect();

    let mode = &args[1];
    let goto_mode = mode.as_str();

    println!("Summoning the Caster in {} mode.", mode);

    match goto_mode{
        "--norm"|"-n"=>roll(),
        "--help"|"-h"|"-?"=>help(),
        &_ => todo!(),
    }
}

fn roll() {
    println!{"Welcome to the Magic Roller!"};
    
    let x = rand::thread_rng().gen_range(0..=200);
    let y = rand::thread_rng().gen_range(1..=3);

    match x{
        0..=9=>println!("No Magic or very few to be of note."),
        10..=19 =>println!("E Rank. Disregard second line."),
        20..=29 =>println!("D Rank, or E+."),
        30..=39 =>println!("C Rank, or E++."),
        40..=49=>println!("B Rank, D+, or E+++."),
        50..=59=>println!("A Rank. Disregard second line."),
        60..=79=>println!("C+ Rank or D++"),
        80..=89=>println!("B+ Rank or D+++"),
        90..=99=>println!("C++ Rank. Disregard second line."),
        100..=119=>println!("A+ Rank. Disregard second line."),
        120..=149=>println!("B+ Rank or C+++."),
        150..=159=>println!("A++ Rank. Disregard second line."),
        160..=199=>println!("B+++ Rank. Disregard second line."),
        200=>println!("A+++ Rank. Disregard second line."),
        i32::MIN..=-1_i32 | 201_i32..=i32::MAX => todo!(),
    }
    match y{
        1=>println!("Take the first rank in the above report."),
        2=>println!("Take the second."),
        3=>println!("If you got B/D+/E+++, take the latter. Otherwise, just take the second."),
        i32::MIN..=0_i32 | 4_i32..=i32::MAX => todo!(),
    }
}

fn help() {
    println!("Type-Moon Style Magic Circuit Randomizer.\n Switches:\n --norm: Runs a chart based on the Parameter Rules from the Type-Moon Fandom.\n --gods: Runs a much higher chart equivalent to the power level possibly found during the Age of Gods.\n --help: Displays this message.");
}
